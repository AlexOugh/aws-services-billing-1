AWSTemplateFormatVersion: '2010-09-09'
Description: Cloudformation to Set up a aws-services-billing Project CodePipeline along with CodeBuild

Parameters:
  GitHubSourceRepositoryOwner:
    Type: String
    Default: SungardAS
    Description: Owner of the Source Repository in GitHub
  GitHubSourceRepositoryName:
    Type: String
    Description: Name of the Source Repository in GitHub
  GitHubSourceRepositoryBranch:
    Type: String
    Default: master
    Description: Branch of the Source Repository in GitHub
  GitHubPersonalAccessToken:
    Type: String
    NoEcho: true
    Description: Personal Access Token to Access GitHub Repository
  ProjectImage:
    Type: String
    AllowedValues:
      - "aws/codebuild/docker:17.09.0"
    Description: Implemented Programming Language
  ContainterImageRepoName:
    Type: String
    Default: sungardas/billing_import
  ContainterImageTag:
    Type: String
    Default: latest
  EncryptionLambdaName:
    Type: String
    Default: ""
    Description: Encryption Lambda Function Name when This Project Lambda Function has Secret Environment Variables to be Encrypted
  VpcCidr:
    Type: String
    Default: "10.10.0.0/16"
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    MaxLength: 18
    MinLength: 9
    Description: "VPC Cidr Block. Format: x.x.x.x/x"
    ConstraintDescription: "must be a valid CIDR range formatted as x.x.x.x/x"
  PublicCidr1:
    Type: String
    Default: "10.10.0.0/20"
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    MaxLength: 18
    MinLength: 9
    Description: "First Public Cidr Block. Format: x.x.x.x/x"
    ConstraintDescription: "must be a valid CIDR range formatted as x.x.x.x/x"
  PublicCidr2:
    Type: String
    Default: "10.10.16.0/20"
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    MaxLength: 18
    MinLength: 9
    Description: "Second Public Cidr Block. Format: x.x.x.x/x"
    ConstraintDescription: "must be a valid CIDR range formatted as x.x.x.x/x"
  PrivateCidr1:
    Type: String
    Default: "10.10.32.0/20"
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    MaxLength: 18
    MinLength: 9
    Description: "First Private Cidr Block. Format: x.x.x.x/x"
    ConstraintDescription: "must be a valid CIDR range formatted as x.x.x.x/x"
  PrivateCidr2:
    Type: String
    Default: "10.10.48.0/20"
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    MaxLength: 18
    MinLength: 9
    Description: "Second Private Cidr Block. Format: x.x.x.x/x"
    ConstraintDescription: "must be a valid CIDR range formatted as x.x.x.x/x"
  NameTag:
    Type: String
    Default: "billing"
    AllowedPattern: "[\\x20-\\x7E]*"
    MaxLength: 255
    MinLength: 1
    Description: "Set the name tag for vpc."
    ConstraintDescription: "can contain only ASCII characters."
  RedshiftUser:
    Type: String
    Default: "billing"
    Description: User Name for Redshift Cluster
  RedshiftPass:
    Type: String
    NoEcho: true
    Description: Password for Redshift Cluster. Password should be atleast 8 characters long.
  RedshiftDatabase:
    Type: String
    Default: "billing"
    Description: Database Name for Redshift Cluster.
  RedshiftSnapshotIdentifier:
    Type: String
    Description: Identifier of Redshift Snapshot for Restoration.
  RedshiftSnapshotClusterIdentifier:
    Type: String
    Description: Redshift Cluster Identifier of Source Snapshot. This must be specified if RedshiftSnapshotIdentifier is set.
Conditions:
  HasEncryptionLambda: !Not [!Equals [!Ref EncryptionLambdaName, ""]]
Resources:
  CodeBuildServiceRole:
      Type: "AWS::IAM::Role"
      Properties:
          Path: "/"
          AssumeRolePolicyDocument:
            Version: "2012-10-17"
            Statement:
              -
                Sid: "AllowCodebuildToAssumeRole"
                Effect: "Allow"
                Action:
                  - "sts:AssumeRole"
                Principal:
                  Service:
                    - "codebuild.amazonaws.com"
          Policies:
            -
              PolicyName: "InlinePolicy"
              PolicyDocument:
                Version: "2012-10-17"
                Statement:
                  -
                    Effect: "Allow"
                    Action:
                      - "logs:CreateLogGroup"
                      - "logs:CreateLogStream"
                      - "logs:PutLogEvents"
                    Resource:
                      - !Join
                        - ''
                        - - "arn:aws:logs:"
                          - !Ref AWS::Region
                          - ":"
                          - !Ref AWS::AccountId
                          - ":log-group:/aws/codebuild/*"
                  -
                    Effect: "Allow"
                    Action:
                      - "s3:GetObject"
                      - "s3:GetObjectVersion"
                      - "s3:PutObject"
                    Resource:
                      - !Join
                        - ''
                        - - "arn:aws:s3:::"
                          - !Ref InputArtifactS3Bucket
                          - "/*"
                  -
                    Effect: "Allow"
                    Action:
                      - "ecr:BatchCheckLayerAvailability"
                      - "ecr:CompleteLayerUpload"
                      - "ecr:GetAuthorizationToken"
                      - "ecr:InitiateLayerUpload"
                      - "ecr:PutImage"
                      - "ecr:UploadLayerPart"
                    Resource: "*"
  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Join
          - '-'
          - - !Ref GitHubSourceRepositoryOwner
            - !Ref GitHubSourceRepositoryName
            - "codebuild"
      Description: CodeBuild for a Project aws-services-alerts
      ServiceRole: !GetAtt CodeBuildServiceRole.Arn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: !Ref ProjectImage
        EnvironmentVariables:
        - Name: S3_BUCKET_NAME
          Value: !Ref InputArtifactS3Bucket
        - Name: AWS_DEFAULT_REGION
          Value: !Ref AWS::Region
        - Name: AWS_ACCOUNT_ID
          Value: !Ref AWS::AccountId
        - Name: IMAGE_REPO_NAME
          Value: !Ref ContainterImageRepoName
        - Name: IMAGE_TAG
          Value: !Ref ContainterImageTag
      Source:
        Type: CODEPIPELINE
      TimeoutInMinutes: 60
  InputArtifactS3Bucket:
    Type: "AWS::S3::Bucket"
  CodePipelineServiceRole:
      Type: "AWS::IAM::Role"
      Properties:
          Path: "/"
          AssumeRolePolicyDocument:
            Version: "2012-10-17"
            Statement:
              -
                Sid: "AllowCodePipelineToAssumeRole"
                Effect: "Allow"
                Action:
                  - "sts:AssumeRole"
                Principal:
                  Service:
                    - "codepipeline.amazonaws.com"
          Policies:
            -
              PolicyName: "InlinePolicy"
              PolicyDocument:
                Version: "2012-10-17"
                Statement:
                  -
                    Effect: "Allow"
                    Action:
                      - "s3:PutObject"
                    Resource:
                      - "arn:aws:s3:::codepipeline*"
                      - "arn:aws:s3:::elasticbeanstalk*"
                  -
                    Effect: "Allow"
                    Action:
                      - "s3:GetObject"
                      - "s3:GetObjectVersion"
                      - "s3:PutObject"
                    Resource: "*"
                  -
                    Effect: "Allow"
                    Action:
                      - "codecommit:CancelUploadArchive"
                      - "codecommit:GetBranch"
                      - "codecommit:GetCommit"
                      - "codecommit:GetUploadArchiveStatus"
                      - "codecommit:UploadArchive"
                    Resource: "*"
                  -
                    Effect: "Allow"
                    Action:
                      - "codedeploy:CreateDeployment"
                      - "codedeploy:GetApplicationRevision"
                      - "codedeploy:GetDeployment"
                      - "codedeploy:GetDeploymentConfig"
                      - "codedeploy:RegisterApplicationRevision"
                    Resource: "*"
                  -
                    Effect: "Allow"
                    Action:
                      - "elasticbeanstalk:*"
                      - "ec2:*"
                      - "elasticloadbalancing:*"
                      - "autoscaling:*"
                      - "cloudwatch:*"
                      - "s3:*"
                      - "sns:*"
                      - "cloudformation:*"
                      - "rds:*"
                      - "sqs:*"
                      - "ecs:*"
                      - "iam:PassRole"
                    Resource: "*"
                  -
                    Effect: "Allow"
                    Action:
                      - "lambda:InvokeFunction"
                      - "lambda:ListFunctions"
                    Resource: "*"
                  -
                    Effect: "Allow"
                    Action:
                      - "opsworks:CreateDeployment"
                      - "opsworks:DescribeApps"
                      - "opsworks:DescribeCommands"
                      - "opsworks:DescribeDeployments"
                      - "opsworks:DescribeInstances"
                      - "opsworks:DescribeStacks"
                      - "opsworks:UpdateApp"
                      - "opsworks:UpdateStack"
                    Resource: "*"
                  -
                    Effect: "Allow"
                    Action:
                      - "cloudformation:CreateStack"
                      - "cloudformation:DeleteStack"
                      - "cloudformation:DescribeStacks"
                      - "cloudformation:UpdateStack"
                      - "cloudformation:CreateChangeSet"
                      - "cloudformation:DeleteChangeSet"
                      - "cloudformation:DescribeChangeSet"
                      - "cloudformation:ExecuteChangeSet"
                      - "cloudformation:SetStackPolicy"
                      - "cloudformation:ValidateTemplate"
                      - "iam:PassRole"
                    Resource: "*"
                  -
                    Effect: "Allow"
                    Action:
                      - "codebuild:BatchGetBuilds"
                      - "codebuild:StartBuild"
                    Resource: "*"
  CloudformationLambdaExecutionRole:
      Type: "AWS::IAM::Role"
      Properties:
          Path: "/"
          AssumeRolePolicyDocument:
            Version: "2012-10-17"
            Statement:
              -
                Sid: "AllowCloudformationToAssumeRole"
                Effect: "Allow"
                Action:
                  - "sts:AssumeRole"
                Principal:
                  Service:
                    - "cloudformation.amazonaws.com"
          Policies:
            -
              PolicyName: "InlinePolicy"
              PolicyDocument:
                Version: "2012-10-17"
                Statement:
                  -
                    Effect: "Allow"
                    Action: "*"
                    Resource: "*"
  CodePipeline:
    Type: "AWS::CodePipeline::Pipeline"
    Properties:
      Name: !Join
          - '-'
          - - !Ref GitHubSourceRepositoryOwner
            - !Ref GitHubSourceRepositoryName
            - "pipeline"
      RoleArn: !GetAtt CodePipelineServiceRole.Arn
      Stages:
        -
          Name: Source
          Actions:
            -
              Name: SourceAction
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Version: 1
                Provider: GitHub
              OutputArtifacts:
                -
                  Name: MyApp
              Configuration:
                Owner: !Ref GitHubSourceRepositoryOwner
                Repo: !Ref GitHubSourceRepositoryName
                Branch: !Ref GitHubSourceRepositoryBranch
                OAuthToken: !Ref GitHubPersonalAccessToken
              RunOrder: 1
        -
          Name: Build
          Actions:
            -
              Name: CodeBuild
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              InputArtifacts:
                -
                  Name: MyApp
              OutputArtifacts:
                -
                  Name: MyAppBuild
              Configuration:
                ProjectName: !Ref CodeBuildProject
              RunOrder: 1
        -
          Name: Deploy
          Actions:
            -
              Name: ChangeSetBuild
              InputArtifacts:
                -
                  Name: MyAppBuild
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: CloudFormation
              Configuration:
                ActionMode: CHANGE_SET_REPLACE
                ChangeSetName: !Join
                    - '-'
                    - - !Ref GitHubSourceRepositoryOwner
                      - !Ref GitHubSourceRepositoryName
                      - "changeset"
                RoleArn: !GetAtt CloudformationLambdaExecutionRole.Arn
                Capabilities: CAPABILITY_IAM
                StackName: !Join
                    - '-'
                    - - !Ref GitHubSourceRepositoryOwner
                      - !Ref GitHubSourceRepositoryName
                ParameterOverrides: !Join
                    - ''
                    - - '{"RedshiftUser": "'
                      - !Ref RedshiftUser
                      - '", "RedshiftPass": "'
                      - !Ref RedshiftPass
                      - '", "RedshiftDatabase": "'
                      - !Ref RedshiftDatabase
                      - '", "VpcCidr": "'
                      - !Ref VpcCidr
                      - '", "PublicCidr1": "'
                      - !Ref PublicCidr1
                      - '", "PublicCidr2":"'
                      - !Ref PublicCidr2
                      - '", "PrivateCidr1": "'
                      - !Ref PrivateCidr1
                      - '", "PrivateCidr2": "'
                      - !Ref PrivateCidr2
                      - '", "NameTag": "'
                      - !Ref NameTag
                      - '", "RedshiftSnapshotIdentifier": "'
                      - !Ref RedshiftSnapshotIdentifier
                      - '", "RedshiftSnapshotClusterIdentifier":"'
                      - !Ref RedshiftSnapshotClusterIdentifier
                      - '"}'
                TemplatePath: MyAppBuild::samTemplate.yaml
              RunOrder: 1
            -
              Name: ChangeSetExecute
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: CloudFormation
              Configuration:
                ActionMode: CHANGE_SET_EXECUTE
                StackName: !Join
                    - '-'
                    - - !Ref GitHubSourceRepositoryOwner
                      - !Ref GitHubSourceRepositoryName
                ChangeSetName: !Join
                    - '-'
                    - - !Ref GitHubSourceRepositoryOwner
                      - !Ref GitHubSourceRepositoryName
                      - "changeset"
              RunOrder: 2
            -
              !If
                - HasEncryptionLambda
                -
                  Name: EncryptLambdaSecretEnvVars
                  ActionTypeId:
                    Category: Invoke
                    Owner: AWS
                    Version: 1
                    Provider: Lambda
                  Configuration:
                    FunctionName: !Ref EncryptionLambdaName
                    UserParameters: !Join
                        - ''
                        - - "{\"stack_name\":\""
                          - !Ref GitHubSourceRepositoryOwner
                          - "-"
                          - !Ref GitHubSourceRepositoryName
                          - "\"}"
                  RunOrder: 3
                - !Ref "AWS::NoValue"
      ArtifactStore:
        Type: S3
        Location: !Ref InputArtifactS3Bucket

Outputs:
  ArtifactS3BucketName:
    Description: S3 Bucket Name to Store Artifacts
    Value: !Ref InputArtifactS3Bucket
  CodeBuildProjectName:
    Description: Created CodeBuild Project Name
    Value: !Ref CodeBuildProject
  CodePipelineProjectName:
    Description: Created CodePipeline Project Name
    Value: !Ref CodePipeline
